# vim: ft=sh

alias gcal='gcalcli'

#
# BASH/ZSH
#

#work
alias ss3="~/Code/onecodex-helper/s3-list/search.py"

function nigiri () {
  echo "ahi
aji
ebi
sake
unagi
hamachi
hamachi-toro
escolar
saba
ika
hotate
hokigai
hirame
kani
maguro
tamago
uni
umi-masu
sake-toro" | gshuf | head -n 1
}

# use a remote docker daemon via an SSH tunnel
function dtun () {
  # set this up as an alias in ~/.ssh/config
  machine_name="${1}"
  socket_path=~/.docker/tunnel/${machine_name}.sock
  mkdir -p ~/.docker/tunnel/
  export DOCKER_HOST=unix://${socket_path}
  echo "Created a socket ${socket_path} to ${machine_name}."
  echo "Press CTRL-C to destroy."
  echo "run the following to use ${machine_name} as your Daemon"
  echo "export DOCKER_HOST=${DOCKER_HOST}"
  ssh -nNT -L ${socket_path}:/var/run/docker.sock ${machine_name} || rm -f "${socket_path}"
}

# show number of files in each directory
function count () {
  find . -type d -print0 | while read -d '' -r dir; do
      files=("$dir"/*)
      printf "%5d files in directory %s\n" "${#files[@]}" "$dir"
  done
}

# open NCBI's genome page given an NCBI taxid
function genome() {
  open "https://www.ncbi.nlm.nih.gov/genome/?term=txid${1}%5BOrganism%3Aexp%5D"
}

# setup ssh-agent for github
# TODO: figure out a way to never have to do this again
function ssha () {
  eval "$(ssh-agent -s)"
  ssh-add -K ~/.ssh/id_rsa
}

# show columns in a CSV file
function columns () {
  head -n 1 $1 | tr ',' '\n'
}

# ctags
alias ptags="ctags --recurse --languages=python ."
alias rbtags="ctags --recurse --langauges=ruby ."
alias jstags="ctags --recurse --languages=javascript ."

alias f='mdfind -name'
alias vi='vim'
alias v='vim'

# so I can use environment variables in my irssi config
alias irssi='irssi --config=<(erb ~/.irssi/config.erb)'

alias last="awk '{print \$NF}'"
alias xi="xargs -I \{}"

# so I can use ghi when I'm in a directory w/ a .ruby-version
alias ghi='/usr/local/bin/ghi'

alias c-="cd .."

alias todo='vim ~/todo.md'
alias scratch='vim ~/scratch.md'

# startrek
alias mtrek='telnet mtrek.com 1701'

# cleanup whiteboard image
# (https://gist.github.com/lelandbatey/8677901)
function whiteboard () {
  convert "$1" -morphology Convolve DoG:15,100,0 -negate -normalize -blur 0x1 -channel RBG -level 60%,91%,0.1 "$2"
}

# lab notebook
function lab() {
  case $1 in
    new)
      touch notes.md && vim notes.md
      ;;
  esac
}

function htmlstrip() {
  sed 's/<[^>]\+>//g'
}

function pushover () {
  curl \
    --form-string "token=${PUSHOVER_TOKEN}" \
    --form-string "user=${PUSHOVER_USER}" \
    --form-string "message=$1" \
    https://api.pushover.net/1/messages.json
}


# lazy ls
alias ls='ls -G'
alias l='lsd -l'

# ring a bell -- cause iTerm2 to notify u of something
# works over ssh, too! (the alert, not the alias)
alias doot="echo -e '\a'"

#
# GIT
#

# pretty git logs
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias lg='git log --graph --full-history --all --color --pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"'
alias lgg='git log --graph --all --decorate --stat --date=iso'

# misc git
alias g='git'
alias gp='git push'
alias ga='git add'
alias gc='git commit'
alias gsu='git status --untracked-files=no'
alias gap='git add -p'
alias gs='git status -sb .'
alias gbh='gb | head'
alias gr='git reset'

alias gb='for ref in $(git for-each-ref --sort=-committerdate --format="%(refname)" refs/heads/ refs/remotes ); do git log -n1 $ref --pretty=format:"%Cgreen%cr%Creset %C(yellow)%d%Creset %C(bold blue)<%an>%Creset%n" | cat ; done | awk '"'! a["'$0'"]++'"

# pretty list branches, sorted by date
alias gb='git for-each-ref --sort=-committerdate refs/heads/ --format "%(committerdate:short) %09 %(committername) %09 %(refname:short)"'


function gad() {
  git add $1
  git commit -m "+ $1"
}


#
# macOS
#

# enable/disable socks proxy on 9050
function prox() {
  case "${1}" in
  on)
    echo "enabling proxy"
    sudo networksetup -setsocksfirewallproxy "Wi-Fi" localhost 9050
    ;;
  off)
    echo "disabling proxy"
    sudo networksetup -setsocksfirewallproxystate "Wi-Fi" off \
    ;;
  *)
    echo "usage: prox on|off"
  esac
}

# hide desktop icons (mac os x)
alias deskhide='defaults write com.apple.finder CreateDesktop -bool false && killall Finder'

alias deskshow='defaults write com.apple.finder CreateDesktop -bool true && killall Finder'

# find largest files in pwd
alias big='du  -a . | sort -n -r | less'

alias flushdns='sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder'


#
# DOCKER DOCKER DOCKER DOCKER DOCKER DOCKER
#

# easy ubuntu
alias ubuntu='docker run --entrypoint /bin/bash -ti --rm ubuntu:18.04'

alias dbash='docker run --entrypoint /bin/bash -ti'

# docker/docker-machine
alias dst='docker-machine start dev'
alias dm='docker-machine'
alias d='docker'
alias db='docker build'
alias dc='docker-compose'
alias dockernuke="docker ps -a | grep -v NAMES | awk '{print \$NF}' | xargs -I {} docker rm {}"
alias dockerkill="docker ps -a | awk '{print $1}' | xargs -I {} docker kill {}"

function dmosh() {
  mosh --ssh "ssh -l ubuntu -i ~/.docker/machine/machines/${1}/id_rsa" $(docker-machine ip ${1})
}

# interactive session inside of docker container
function de() {
  docker run \
    --entrypoint /bin/bash \
    --env TERM=xterm \
    --tty \
    --interactive \
    ${1}
}

function ddenv() {
  echo "using docker daemon ${1}"
  eval "$(docker-machine env ${1})"
}

#
# PYTHON
#

alias p='python'
alias pe='pyenv'
alias pea='pyenv activate'
alias pad='pyenv activate $(basename $(pwd))'
alias pac='pyenv virtualenv $1 $(basename $(pwd))'

#
# RUBY
#

alias b='bundle exec'
alias ftest='bin/rspec --tag focus'
alias mtest='bin/rspec --tag ~@type:feature'

#
# PROGRAM SHORTCUTS
#

alias mux='tmuxinator'
alias news="newsboat"
alias mutt="cd ~/Downloads && mutt"

#
# MISC/TOOLS
#

# show active network listeners
alias netlisteners='lsof -i -P | grep LISTEN'

# removes trailing whitespace from all files in a directory recursively
# from http://stackoverflow.com/questions/149057/how-to-remove-trailing-whitespace-of-all-files-recursively
alias ws='find . -not \( -name .svn -prune -o -name .git -prune \) -type f -print0 | xargs -0 sed -i '' -E "s/[[:space:]]*$//"'

# Display image with tput
function image() {
  convert $1 -resize 40 txt:-|sed -E 's/://;s/\( ? ?//;s/, ? ?/,/g;s/\)//;s/([0-9]+,[0-9]+,[0-9]+),[0-9]+/\1/g;s/255/254/g;/mage/d'|awk '{print $1,$2}'|sed -E 's/^0,[0-9]+ /print "echo;tput setaf "\;/;s/^[0-9]+,[0-9]+ /print "tput setaf ";/;s/(.+),(.+),(.+)/\1\/42.5*36+\2\/42.5*6+\3\/42.5+16/'|bc|sed 's/$/;echo -n "  ";/'|tr '\n' ' '|sed 's/^/tput rev;/;s/; /;/g;s/$/tput sgr0;echo/'|bash
}

colors() {
  for i in {0..255} ; do
      printf "\x1b[38;5;${i}mcolour${i}\n"
  done
}

# extract most known archives with one command
extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}


# fetch a random pokemon name
# i use this to name machines
function pokemon () {
  count=$(curl --silent https://pokeapi.co/api/v2/pokemon | jq .count)
  pokemon_id=$((1 + RANDOM % ${count}))
  pokemon_data=$(curl --silent https://pokeapi.co/api/v2/pokemon/${pokemon_id})
  echo "${pokemon_data}" | jq ".forms[0].name"
}

# switch to random mac address (en0)
function switchmac () {
  newmac=$(perl -e 'for ($i=0;$i<5;$i++){@m[$i]=int(rand(256));} printf "02:%X:%X:%X:%X:%X\n",@m;')
  echo "changing mac address to ${newmac}"
  sudo ifconfig en0 ether ${newmac} && sudo ifconfig en0 down && sudo ifconfig en0 up
  echo "your mac address is now $(ifconfig en0 | grep ether | awk '{print $2}')"
}

# summary of next-generation sequencing technologies
alias ngs="curl --silent 'https://docs.google.com/spreadsheets/d/1GMMfhyLK0-q8XkIo3YxlWaZA5vVMuhU1kg41g4xLkXc/export?gid=4&format=csv' | grep -v '^#' | grep -v '^\"' | column -t -s\, | less -S"

alias weather='curl -L wttr.in'
alias moon='curl -L wttr.in/Moon'
alias radar='open https://radar.weather.gov/Conus/full_loop.php'

alias wiki='telnet telnet.wmflabs.org'

#
# INTERNET
#

alias myip='curl --silent -4 http://icanhazip.com'
#alias myip6="curl --silent http://icanhazip.com"
alias geoip='curl --silent https://freegeoip.app/json/$(myip) | jq'

alias zcat=gzcat

#
# SECURIDAD
#

alias vpn='sudo openvpn ~/.config.ovpn'

#
# TILDE TOWN
#

function tilde-tun () {
  if [ -e ~/.tilde_ssh_pid ]
  then
    echo "stopping tilde tunnel"
    kill `cat ~/.tilde_ssh_pid`
    rm ~/.tilde_ssh_pid
  else
    echo "starting tilde tunnel"
    nohup ssh -N town -L localhost:6667:localhost:6667 &
    echo $! > ~/.tilde_ssh_pid
  fi
}

alias rot13="tr '[A-Za-z]' '[N-ZA-Mn-za-m]'"

#
# BIOINFORMATICS
#

# hack so I can run figtree on macOS (requires java 1.8)
alias figtree='jenv shell 1.8 && java -jar $(mdfind -name figtree.jar) $1'

alias ncbi='ftp ftp://anonymous:audy@ftp.ncbi.nih.gov'

alias knit="Rscript -e 'knitr::render_markdown($1)'"

# extract sequences from a fastq file
function fqseqs () {
  awk 'NR%2 == 0 && NR%4 != 0'
}

# ðŸ’– https://github.com/tomnomnom/gron
alias ungron="gron --ungron"
