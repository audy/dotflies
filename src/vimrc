" vimrc
"
" austin g. davis-richardson
"
" most of the things here are taken from others
"


" Pathogen
"
"
filetype off
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()

"
" misc.
"
filetype plugin indent on
set nocompatible

set nobackup
set nowritebackup
set noswapfile

set backup                        " enable backups
set noswapfile                    " it's 2013, Vim.

set undodir=~/.vim/tmp/undo//     " undo files
set backupdir=~/.vim/tmp/backup// " backups
set directory=~/.vim/tmp/swap//   " swap files

set autoindent
set tabstop=8
set softtabstop=4
set shiftwidth=4
set expandtab
set wrap
set textwidth=80

set mouse=vin " laziness

syntax enable

set encoding=utf-8

set undofile
set undoreload=10000

set ttyfast
set lazyredraw

set showbreak=↪

set autowrite
set autoread

set shiftround
set colorcolumn=+1

set t_Co=256
set background=dark
colorscheme Mustang

set ruler
set rnu
set numberwidth=5

" Trailing whitespace {{{
" Only shown when not in insert mode so I don't go insane.
augroup trailing
    au!
    au InsertEnter * :set listchars-=trail:⌴
    au InsertLeave * :set listchars+=trail:⌴
augroup END

" return to same line when you reopen vim
augroup line_return
    au!
    au BufReadPost *
        \ if line("'\"") > 0 && line("'\"") <= line("$") |
        \     execute 'normal! g`"zvzz' |
        \ endif
augroup END

" space is the leader character
let mapleader = " "

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" Don't try to highlight lines longer than 800 characters.
set synmaxcol=800

set notimeout
set ttimeout
set ttimeoutlen=10

" save when focus lost
au FocusLost *:silent! wall

" Only show cursorline in the current window and in normal mode.
augroup cline
    au!
    au WinLeave,InsertEnter * set nocursorline
    au WinEnter,InsertLeave * set cursorline
augroup END

"
" Shortcuts
"

" Clean trailing whitespace
nnoremap <leader>ww mz:%s/\s\+$//<cr>:let @/=''<cr>`z

" Kill window
nnoremap K :q<cr>

" Wrap
nnoremap <leader>W :set wrap!<cr>


" Copying text to the system clipboard.
"
" For some reason Vim no longer wants to talk to the OS X pasteboard through "*.
" Computers are bullshit.
" (thanks steve losh)
function! g:FuckingCopyTheTextPlease()
    let old_z = @z
    normal! gv"zy
    call system('pbcopy', @z)
    let @z = old_z
endfunction
noremap <leader>p :silent! set paste<CR>"*p:set nopaste<CR>
" noremap <leader>p mz:r!pbpaste<cr>`z
vnoremap <leader>y :<c-u>call g:FuckingCopyTheTextPlease()<cr>

" Clean trailing whitespace
nnoremap <leader>ww mz:%s/\s\+$//<cr>:let @/=''<cr>`z

" Formatting, TextMate-style
nnoremap Q gqip
vnoremap Q gq

" Reformat line.
nnoremap ql gqq

" Select (charwise) the contents of the current line, excluding indentation.
" " Great for pasting Python lines into REPLs.
nnoremap vv ^vg_

"
" Searching & Movement
"

" Use sane regexes.
nnoremap / /\v
vnoremap / /\v

" Keep search matches in the middle of the window.
nnoremap n nzzzv
nnoremap N Nzzzv

" Same when jumping around
nnoremap g; g;zz
nnoremap g, g,zz
nnoremap <c-o> <c-o>zz

" Easier to type, and I never use the default behavior.
noremap H ^
noremap L $
vnoremap L g_

" Heresy
inoremap <c-a> <esc>I
inoremap <c-e> <esc>A
cnoremap <c-a> <home>
cnoremap <c-e> <end>

" Easy buffer navigation
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

" enable just enough folding to annoy me if
" I nest too deeply
set foldlevelstart=6

nnoremap zO zczO


"
" Plugins
"

" CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

" tmuxify
let g:tmuxify_pane_split = '-v' " start vertical pane

"
" Language-specific settings
"

" Go
au BufRead,BufNewFile *.go set filetype=go

" R
let vimrplugin_assign = 0 " don't automatically convert underscores to <-

fun! s:DetectRscript()
    if tolower(getline(1)) == '#!/usr/bin/env rscript'
        set ft=R
    endif
endfun

autocmd BufNewFile,BufRead * call s:DetectRscript()
