" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

set noerrorbells
set novisualbell
set encoding=utf-8

" disable visual bell in MacVim
autocmd! GUIEnter * set vb t_vb=

set shell=bash\ -i

filetype off

" custom file extensions
au BufNewFile,BufRead *.coffee set filetype=coffeescript
au BufNewFile,BufRead *.jbuilder set filetype=ruby
au BufNewFile,BufRead *.ts set filetype=typescript
au BufNewFile,BufRead *.go set filetype=go

" always use system ruby
let g:ruby_path = ['/usr/local/bin/ruby', '/usr/bin/ruby']

" always use python3 (for iron.nvim)
let g:python3_host_prog = '/usr/local/bin/python3'

call plug#begin('~/.vim/plugged')

Plug 'SirVer/ultisnips'
Plug 'kien/ctrlp.vim'
Plug 'mattn/gist-vim' | Plug 'mattn/webapi-vim' " Gist
Plug 'tpope/vim-surround'                       " sd(, sa(, etc...
Plug 'justinmk/vim-sneak'                       " s{char}{char} and S{char}{char} to move
Plug 'vim-python/python-syntax'
Plug 'tpope/vim-abolish'                        " smart replace
Plug 'godlygeek/tabular'                        " Tab /=
Plug 'lepture/vim-jinja'
Plug 'hkupty/iron.nvim'

call plug#end()

filetype plugin indent on    " required

" leader/local leader
let mapleader = " "
let maplocalleader = ","

" lazy
set mouse=vin

"
" Behavior
"

set clipboard=unnamed " use system clipboard
set autowrite " autosave
set autoread " autoupdate
set backspace=indent,eol,start " backspace over anything

" undo

set undodir=~/.vim/tmp/undo//     " undo files
set backupdir=~/.vim/tmp/backup// " backups
set directory=~/.vim/tmp/swap//   " swap files
set undofile
set undoreload=10000
set autowrite
set autoread

set backup
set noswapfile

" return to same line when you reopen vim
augroup line_return
  au!
  au BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \     execute 'normal! g`"zvzz' |
    \ endif
augroup END

"
" auto-session
"

" borrowed from https://github.com/vim-scripts/autosession.vim/blob/master/plugin/autosession.vim
" inspired by https://twitter.com/b0rk/status/906739364985806848
let f_auto_ses= ".vimsession"            " file for autosaved session

" auto-load last-saved session
if v:this_session=="" && argc()==0         " if no session and no files
  if filereadable(f_auto_ses)              " if autosaved session exists
    silent exe "source" . f_auto_ses
  endif
  let v:this_session= f_auto_ses           " give name to actual session
  au VimLeave * call AutoSaveSession()     " autosave when quitting Vim
endif

" autosave session
function! AutoSaveSession()
  if v:this_session==g:f_auto_ses && filewritable(".") " same ses & writable dir
    exe "mksession! " . g:f_auto_ses
  endif
endfunction

" save when focus lost
au FocusLost *:silent! wall

"
" Search
"
set incsearch " use incremental searching
set ic " base case sensitive, unless not
set smartcase " be case insensitive, or don't

" Keep search matches in the middle of the window.
nnoremap n nzzzv
nnoremap N Nzzzv

" Same when jumping around
nnoremap g; g;zz
nnoremap g, g,zz
nnoremap <c-o> <c-o>zz

"
" Display
"

" eyesight
set guifont=Menlo\ Regular:h14

" disable GUI scrollbar in MacVim
set guioptions-=r
set guioptions-=L
set background=dark
"set rnu " relative line numbers
set numberwidth=3
set showbreak=â†ª

set ttyfast

set number

set t_Co=256
syntax enable

let iterm_profile=$ITERM_PROFILE

if iterm_profile == 'Light'
  set background=light
  colorscheme solarized
else
  set background=dark
  colorscheme hybrid
  let g:hybrid_custom_term_colors = 1
  let g:hybrid_reduced_contrast = 1 " Remove this line if using the default palette.
endif
" solarized

"
" Text Formatting
"

set nobackup
set noswapfile

set autoindent " automatically indent new lines
set tabstop=2
set softtabstop=2
set shiftwidth=2
set nosmarttab " fuck tabs
set nowrap " dont autowrap lines
set expandtab " expand tabs to spaces

set synmaxcol=800 " max highlight line width

" save when focus lost
au FocusLost *:silent! wall

"
" Mappings
"

" leader/local leader
let mapleader = " "
let maplocalleader = ","

" Kill window
nnoremap q :q<cr>

" Wrap selection
nnoremap <leader>W :set wrap!<cr>

" Clean trailing whitespace
nnoremap <leader>ww mz:%s/\s\+$//<cr>:let @/=''<cr>`z

"
" LANGUAGE-SPECIFIC SETTINGS
"

" Markdown

autocmd BufNewFile,BufReadPost *.md set filetype=markdown

" language-specific syntax highlighting in markdown ''' blocks
let g:markdown_fenced_languages = ['sh', 'css', 'javascript', 'python', 'ruby', 'xml']

" can't figure out how to get markdown folding working anyway...
let g:vim_markdown_frontmatter=1
let g:vim_markdown_initial_foldlevel=1

" autowrap text when editing markdown
autocmd Filetype markdown setlocal textwidth=79
autocmd Filetype markdown set wrap

" Python
au FileType python set shiftwidth=4 tabstop=4

"
" Plugin Settings
"

" Vroom

let g:vroom_use_spring = 1
let g:vroom_use_binstubs = 1

" CtrlP
let g:UltiSnipsNoPythonWarning = 1 " silence python version warnings
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_max_files=1024
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*pyc
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.git|\.hg|\.svn|build|venv)$',
  \ 'file': '\v\.(exe|so|dll|png|jpeg|jpg|gif|pdf)$',
  \ }
