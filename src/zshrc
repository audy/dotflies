# store history FOR-EV-ER
export HISTFILE="${HOME}/.history/$(date -u +%Y-%m-%d.%H.%M.%S)_$$"
export SAVEHIST=100
setopt APPEND_HISTORY
setopt SHARE_HISTORY

#
# LOOKS
#

export TERM='xterm-256color'

EMOJI=(
☕️
⛈
⛏
🌍
🌞
🌭
🌮
🌯
🌶
🍄
🍔
🍕
🍣
🍪
🍻
🍿
🎨
🏎
🏹
🐌
🐓
🐞
🐦
🐧
🐭
🐳
🐶
🐷
🐸
🐼
🐿
👽
💀
💎
💜
💩
💰
💾
📸
🔬
🔮
🕵
🕹
🙃
🚀
🛠
🛰
🤑
🤖
🦀
🦃
🦄
🧀
)

settitle() {
  # set iTerm2 window title
  echo -ne "\e]1;$1\a"
}

emoji="$EMOJI[$RANDOM%$#EMOJI+1]"

getprompt() {
  if [ ! -z $SSH_CLIENT ]; then
    hostname=`hostname`
  fi
  echo -n "${hostname}${emoji}  "
}

settitle $emoji

PROMPT=$(getprompt)
RPROMPT='%c'

# solarized lscolors (https://github.com/seebi/dircolors-solarized/issues/10)
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD

#
# COMPLETION
#

## cache autocomplete
#zstyle ':completion:*' use-cache on
#zstyle ':completion:*' cache-path ~/.zsh/cache

# fuzzy matching
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# match anywhere in filename
zstyle ':completion:*' completer _complete
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' '+l:|=* r:|=*'
autoload -Uz compinit
compinit

# search through history by typing up and down
bindkey '\e[A' history-search-backward
bindkey '\e[B' history-search-forward

#
# KEY BINDINGS
#

bindkey ' ' magic-space                               # [Space] - do history expansion

bindkey -e                                 # emacs mode
bindkey '^[[1;5C' forward-word             # [Ctrl-RightArrow] - move forward one word
bindkey '^[[1;5D' backward-word            # [Ctrl-LeftArrow] - move backward one word

bindkey '^?' backward-delete-char          # [Backspace] - delete backward
if [[ "${terminfo[kdch1]}" != "" ]]; then
  bindkey "${terminfo[kdch1]}" delete-char # [Delete] - delete forward
else
  bindkey "^[[3~" delete-char
  bindkey "^[3;5~" delete-char
  bindkey "\e[3~" delete-char
fi

if [[ "${terminfo[kcuu1]}" != "" ]]; then
  bindkey "${terminfo[kcuu1]}" up-line-or-search      # start typing + [Up-Arrow] - fuzzy find history forward
fi
if [[ "${terminfo[kcud1]}" != "" ]]; then
  bindkey "${terminfo[kcud1]}" down-line-or-search    # start typing + [Down-Arrow] - fuzzy find history backward
fi

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# NPM
export PATH=$PATH:/usr/local/share/npm/bin

# Load Tmuxinator, if you are using it
[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

export EDITOR='vim'

if [ -f ~/.aliases ]
then
  source ~/.aliases
fi

unsetopt correct_all

# brew install zsh-syntax-highlighting
if [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]
then
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

#eval "$(pyenv virtualenv-init -)"
#export PATH="$HOME/.rbenv/bin:$PATH"

#export PYENV_ROOT="$HOME/.pyenv"
#export PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"

# for gems installed by Homebrew Ruby
# make sure $PATH goes first!
export PATH="$PATH:/usr/local/opt/ruby/bin"

# GOPATH
export PATH=$PATH:/usr/local/Cellar/go/1.2.1/libexec/bin
export GOPATH=/usr/local/Cellar/go/1.2.1/libexec/bin

# so CPAN installs modules to ~/perl5
#:eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)
export JAVA_HOME="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"

export DOCKER_HOST=tcp://127.0.0.1:2375

# for GNU OCTAVE
PATH="$PATH:/usr/texbin"

# node version manager
#export NVM_DIR=~/.nvm
#source $(brew --prefix nvm)/nvm.sh
# $(docker-machine env dev)

PERL_MB_OPT="--install_base \"/Users/austin/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/austin/perl5"; export PERL_MM_OPT;

# torch stuff
#export PATH=/Users/austin/torch/install/bin:$PATH  # Added automatically by torch-dist
#export LD_LIBRARY_PATH=/Users/austin/torch/install/lib:$LD_LIBRARY_PATH  # Added automatically by torch-dist
#export DYLD_LIBRARY_PATH=/Users/austin/torch/install/lib:$DYLD_LIBRARY_PATH  # Added automatically by torch-dist
export PATH="/usr/local/sbin:$PATH"
