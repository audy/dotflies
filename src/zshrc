#
# LOOKS
#

export TERM='xterm-256color'

EMOJI=(💩 🐦 🚀 🐞 🎨 🍕 🐭 👽 ☕️ 🔬 💀 🐷 🐼 🐶 🐸 🐧 🐳 🍔 🍣 🍻 🔮 💰 💎 💾 💜 🍪 🌞 🌍 🐌 🐓 🍄 )

function random_emoji {
  echo -n "$EMOJI[$RANDOM%$#EMOJI+1]"
}

PROMPT="$(random_emoji)  "
RPROMPT='%c'


# solarized lscolors (https://github.com/seebi/dircolors-solarized/issues/10)
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD

#
# COMPLETION
#

zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# fuzzy matching
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric


# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Customize to your needs...
export PATH=/usr/local/sbin:/usr/local/bin:/Users/austin/.rvm/gems/ruby-1.9.3-p374/bin:/Users/austin/.rvm/gems/ruby-1.9.3-p374@global/bin:/Users/austin/.rvm/rubies/ruby-1.9.3-p374/bin:/Users/austin/.rvm/bin:/Users/austin/.pythonbrew/bin:/Users/austin/.pythonbrew/pythons/Python-2.7/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/texbin:/Users/austin/.gem/ruby/1.8/bin:/opt/nginx/sbin:/Users/austin/.local/bin:$PATH

# NPM
export PATH=$PATH:/usr/local/share/npm/bin

# Load Tmuxinator, if you are using it
[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

export EDITOR='vim'

if [ -f ~/.aliases ]
then
  source ~/.aliases
fi

unsetopt correct_all

# brew install zsh-syntax-highlighting
if [ -f /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]
then
  source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi
export URBIT_HOME=/Users/austin/Code/urbit/urb

export RBENV_ROOT=/usr/local/var/rbenv
export PATH="$RBENV_ROOT/bin:$RBENV_ROOT/shims:$PATH"

# these things are slow
# --no-rehash takes about 0.25s off startup time (for both)
#if which rbenv > /dev/null; then eval "$(rbenv init - --no-rehash)"; fi
#if which pyenv > /dev/null; then eval "$(pyenv init - --no-rehash)"; fi



#eval "$(pyenv virtualenv-init -)"
export PATH="$HOME/.rbenv/bin:$PATH"

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"

# for gems installed by Homebrew Ruby
export PATH="/usr/local/opt/ruby/bin:$PATH"

# GOPATH
export PATH=$PATH:/usr/local/Cellar/go/1.2.1/libexec/bin
export GOPATH=/usr/local/Cellar/go/1.2.1/libexec/bin

# rbenv shim

# so CPAN installs modules to ~/perl5
#eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)
#export JAVA_HOME="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"

export DOCKER_HOST=tcp://127.0.0.1:2375

# for GNU OCTAVE
PATH="$PATH:/usr/texbin"

# node version manager
#export NVM_DIR=~/.nvm
#source $(brew --prefix nvm)/nvm.sh
# $(docker-machine env dev)

PERL_MB_OPT="--install_base \"/Users/austin/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/Users/austin/perl5"; export PERL_MM_OPT;
